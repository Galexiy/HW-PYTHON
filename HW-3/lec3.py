# Домашняя работа №3

# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на позиции с нечетным индексом.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# my_list = [2, 3, 5, 9, 3]
# sum = 0
# for i in range(len(my_list)):
#     if i % 2 != 0:
#         sum += my_list[i]
# print(sum)


# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент,
# второй и предпоследний и т.д.
# Пример:
# [2, 3, 4, 5, 6] => [12, 15, 16];
# [2, 3, 5, 6] => [12, 15]

# не смог додумать(

# my_list = [2, 3, 5, 6]
# res = []
# count = 0
# for i in range(len(my_list)):
#     if count % 2 == 0:
#         res.append(my_list[i] * my_list[-i-1]) 
# print(res)

# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным 
# и минимальным значением дробной части элементов, отличной от 0.
# Пример:
# [1.1, 1.2, 3.1, 5, 10.01] => 0.19 


# my_list = [1.1, 1.2, 3.1, 5, 10.01]
# max = 0
# min = my_list[0]
# for i in range(len(my_list)):
#     if my_list[i] - int (my_list[i]) > max and my_list[i] != int(my_list[i]):
#         max = round(my_list[i] - int (my_list[i]),2)
#     if my_list[i] - int (my_list[i]) < min and my_list[i] != int(my_list[i]):
#         min = round(my_list[i] - int (my_list[i]),2)
#     rez = max - min
# print(f'разница между максимальным значением дробной части элементов {max} и минимальным {min}, \ отличной от "0" будет равна {rez}')


# Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Пример:
# 45 -> 101101
# 3 -> 11
# 2 -> 10


# num = int(input("Введите число: "))
# s = " "
# while num > 0:
#     s = str(num % 2) + s
#     num //= 2
# print(s)



# Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# Пример:
# для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] Негафибоначчи

# num = int(input('введите число: '))
# def fib(n):
#     if n in [1,2]:
#         return 1
#     else:
#         return fib(n-1) + fib(n-2)
# def Nega_fib(n):
#     if n == 1:                       
#         return 1
#     elif n == 2:                       
#         return -1
#     else:
#         a, b = 1, -1
#         for i in range(2, n):
#             a, b = b, a - b
#         return b
# list = [0]
# for i in range(1, num + 1):
#     list.append(fib(i))
#     list.insert(0, Nega_fib(i))
# print(list)
